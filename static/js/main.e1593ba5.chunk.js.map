{"version":3,"sources":["ignite.jpg","Question.js","Answer.js","Spinner.js","TrashCan.js","Game.js","serviceWorker.js","index.js"],"names":["module","exports","Question","props","console","log","state","overlay","onReady","bind","onStateChange","event","target","playVideo","data","this","callback","setState","index","videoMarkup","questionMarkup","opts","question","vidurl","playerVars","autoplay","controls","disablekb","fs","modestbranding","rel","playsinline","showinfo","iv_load_policy","YouTube","videoId","substring","className","id","React","Component","Answer","handleClick","e","lock","status","answer","a","b","c","d","onClick","Spinner","x","y","w","h","m","offset","paused","mark","wait","degree","count","setup","p5","canvasParent","canvasW","document","getElementsByClassName","offsetWidth","canvasH","offsetHeight","createCanvas","parent","noStroke","textAlign","CENTER","textSize","width","height","draw","clear","duration","fill","ellipse","arc","radians","text","millis","advance","mouseClicked","dist","mouseX","mouseY","TrashCan","localStorage","Game","stage","error","isLoaded","entries","vplay","qlock","qlockTimer","receiveAnswer","receiveVideoState","advanceQuestion","i","parseInt","getItem","NaN","fetch","then","res","json","result","feed","entry","dat","correct","type","gsx$type","$t","message","gsx$question","gsx$youtube","gsx$answer","gsx$a","gsx$b","gsx$c","gsx$d","lockTimer","src","Ignite","alt","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1593ba5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ignite.56afa82d.jpg\";","import React from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport './Question.css';\r\n\r\nclass Question extends React.Component {\r\n    constructor(props) {\r\n        console.log('construct question');\r\n        super(props);\r\n        this.state = {\r\n            overlay: 'noclick', // 'noclick', 'question'\r\n        }\r\n        this.onReady = this.onReady.bind(this);\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n    }\r\n\r\n    onReady(event) {\r\n        console.log('video ready');\r\n        event.target.playVideo();\r\n    }\r\n\r\n    onStateChange(event) {\r\n        console.log('video state change: ' + event.data);\r\n        this.props.callback(event.data)\r\n\r\n        // event.data\r\n        // 1 - playing\r\n        // 2 - paused\r\n        // 3 - scanning ahead\r\n        // 0 - end of video reached\r\n\r\n        let overlay = event.data === 0 ? 'question' : 'noclick';\r\n        this.setState({ overlay })\r\n    }\r\n\r\n    render() {\r\n        console.log('render question');\r\n        console.log('state overlay = ' + this.state.overlay);\r\n        console.log('qindex = ' + this.props.index);\r\n\r\n        let { question, vidurl, index } = this.props;\r\n        let videoMarkup, questionMarkup, opts;\r\n\r\n        opts = {\r\n            playerVars: {           // https://developers.google.com/youtube/player_parameters\r\n                autoplay: 1,        // auto play, yes\r\n                controls: 0,        // disable ui controls\r\n                disablekb: 1,       // disable keyboard controls\r\n                fs: 0,              // no full screen\r\n                modestbranding: 1,  // small logo\r\n                rel: 0,             // no related videos\r\n                playsinline: 1,     // no ios auto fullscreen\r\n                showinfo: 0,        // hide video info (deprecated)\r\n                iv_load_policy: 3   // remove annotations\r\n            }\r\n        }\r\n\r\n        videoMarkup = \r\n        <YouTube \r\n            videoId={vidurl.substring(17)}\r\n            opts={opts}\r\n            onReady={this.onReady}\r\n            onStateChange={this.onStateChange}\r\n        />\r\n\r\n        if(index > 0 && this.state.overlay === 'noclick') {\r\n            questionMarkup = <div className=\"embed-overlay\"></div>\r\n\r\n        } else if(this.state.overlay === 'question') {\r\n            questionMarkup =\r\n            <div className=\"embed-overlay\">\r\n                <div className=\"question\">\r\n                    {question}\r\n                </div>\r\n            </div>\r\n        }\r\n        \r\n        return (\r\n            <div id=\"question-panel\">\r\n                {videoMarkup}\r\n                {questionMarkup}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Question;\r\n\r\n\r\n","import React from 'react';\r\nimport './Answer.css';\r\n\r\nclass Answer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        console.log('answer clicked, locked = ' + this.props.lock);\r\n\r\n        if(!this.props.lock) {\r\n            const status = e.target.id === this.props.answer;\r\n            this.props.callback(status);    \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {answer, a, b, c, d, lock} = this.props;\r\n        let answerMarkup;\r\n\r\n        if(lock) {\r\n            answerMarkup=\r\n            <div id=\"multiple-choice-container\">\r\n                <div className=\"mc-row\">\r\n                    <div className={\"noselect answer \" + (answer === 'A' ? 'correct' : 'wrong')} id=\"A\" onClick={(e) => this.handleClick(e)}>(A) {a}</div>\r\n                    <div className={\"noselect answer \" + (answer === 'B' ? 'correct' : 'wrong')} id=\"B\" onClick={(e) => this.handleClick(e)}>(B) {b}</div>\r\n                </div>\r\n                <div className=\"mc-row\">\r\n                    <div className={\"noselect answer \" + (answer === 'C' ? 'correct' : 'wrong')} id=\"C\" onClick={(e) => this.handleClick(e)}>(C) {c}</div>\r\n                    <div className={\"noselect answer \" + (answer === 'D' ? 'correct' : 'wrong')} id=\"D\" onClick={(e) => this.handleClick(e)}>(D) {d}</div>\r\n                </div>\r\n            </div>\r\n            \r\n        } else {\r\n            answerMarkup =\r\n            <div id=\"multiple-choice-container\">\r\n                <div className=\"mc-row\">\r\n                    <div className=\"noselect answer\" id=\"A\" onClick={(e) => this.handleClick(e)}>(A) {a}</div>\r\n                    <div className=\"noselect answer\" id=\"B\" onClick={(e) => this.handleClick(e)}>(B) {b}</div>\r\n                </div>\r\n                <div className=\"mc-row\">\r\n                    <div className=\"noselect answer\" id=\"C\" onClick={(e) => this.handleClick(e)}>(C) {c}</div>\r\n                    <div className=\"noselect answer\" id=\"D\" onClick={(e) => this.handleClick(e)}>(D) {d}</div>\r\n                </div>\r\n            </div>\r\n        }\r\n        return (\r\n            answerMarkup\r\n        )\r\n    }\r\n}\r\n\r\nexport default Answer;","import React from 'react';\r\nimport Sketch from 'react-p5';\r\n\r\nclass Spinner extends React.Component {\r\n    x = 0;\r\n    y = 0;\r\n    w = 50;\r\n    h = 50;\r\n    m = 0;\r\n    offset = 20;\r\n    paused = false;\r\n    mark = 0;\r\n    wait = 1000;\r\n    degree = 45;\r\n    count = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.advance = this.advance.bind(this);\r\n        this.degree = 360 / props.duration;\r\n        this.count = props.duration;\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.paused = !this.paused;\r\n    }\r\n\r\n    advance() {\r\n        this.props.callback();\r\n    }\r\n\r\n    setup = (p5, canvasParent) => {\r\n        const canvasW = document.getElementsByClassName('embed-container')[0].offsetWidth;\r\n        const canvasH = document.getElementsByClassName('embed-container')[0].offsetHeight;\r\n        p5.createCanvas(canvasW, canvasH).parent(canvasParent);\r\n        p5.noStroke();\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.textSize(p5.width / 25);\r\n        this.x = p5.width/2;\r\n        this.y = p5.height/2;\r\n        this.w = p5.width / 4;\r\n        this.h = p5.width / 4;\r\n    }\r\n\r\n    draw = p5 => {\r\n        p5.clear();\r\n        if(this.props.duration === 30)\r\n            p5.fill(255, 0, 0, 100);\r\n        else\r\n            p5.fill(0, 255, 0, 100);\r\n        p5.ellipse(this.x, this.y, this.w, this.h);\r\n        p5.fill(0, 0, 255, 100);\r\n        p5.arc(this.x, this.y, this.w, this.h, p5.radians(0), p5.radians(this.m));\r\n        p5.fill(255, 100);\r\n        p5.ellipse(this.x, this.y, this.w-this.offset, this.h-this.offset);\r\n        p5.fill(0);\r\n        p5.text(this.count, this.x, this.y);\r\n\r\n        if(p5.millis() - this.mark > this.wait) {\r\n            this.mark = p5.millis();\r\n            this.m += this.degree;\r\n            this.count--;\r\n        }\r\n\r\n        if(this.m >= 360) {\r\n            this.advance();\r\n        }\r\n    }\r\n\r\n    mouseClicked = p5 => {\r\n        const click = p5.dist(this.x, this.y, p5.mouseX, p5.mouseY);\r\n        if(click < p5.dist(this.x, this.y, this.w-this.offset, this.h-this.offset)) {\r\n            // this.advance();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Sketch setup={this.setup} draw={this.draw} mouseClicked={this.mouseClicked} />;\r\n    }\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './TrashCan.css';\r\n\r\nclass TrashCan extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        console.log('clear local index');\r\n        localStorage.clear('index');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"trash-can\" onClick={this.clear}>Clear Storage</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrashCan;","// autoplay on ios not possible at this time\r\n// https://stackoverflow.com/a/48442630\r\n\r\n// sheet\r\n// https://docs.google.com/spreadsheets/d/1gFBVScKExlatL52RSngKDOLfDGNEo4GebnuHMlVhmNE/edit#gid=0\r\n\r\n// json\r\n// https://spreadsheets.google.com/feeds/list/1gFBVScKExlatL52RSngKDOLfDGNEo4GebnuHMlVhmNE/od6/public/values?alt=json\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport Question from './Question';\r\nimport Answer from './Answer';\r\nimport Spinner from './Spinner';\r\nimport TrashCan from './TrashCan';\r\n\r\nimport './Game.css';\r\n\r\nimport Ignite from './ignite.jpg';\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        console.log('construct game');\r\n        \r\n        super(props);\r\n\r\n        this.state = {\r\n            stage: 'intro',     // [intro, quiz, end] /* todo: implement react router */\r\n            error: null,        // netcode\r\n            isLoaded: false,    // netcode\r\n            entries: [],        // stores json\r\n            index: -1,   // current question (last=14)\r\n            vplay: true,        // video is playing\r\n            qlock: false,       // disable multiple choice answer clicks\r\n            qlockTimer: 0,      // duration of answer click disable\r\n        };\r\n\r\n        this.receiveAnswer = this.receiveAnswer.bind(this);\r\n        this.receiveVideoState = this.receiveVideoState.bind(this);\r\n        this.advanceQuestion = this.advanceQuestion.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('game component did mount');\r\n        \r\n        const data = 'https://spreadsheets.google.com/feeds/list/1gFBVScKExlatL52RSngKDOLfDGNEo4GebnuHMlVhmNE/od6/public/values?alt=json';\r\n        \r\n        // todo: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN\r\n        let i = parseInt(localStorage.getItem('index')) - 1;\r\n        if(i === NaN) console.log('nan');\r\n        if(i === null) console.log('null');\r\n        if(i !== NaN && i !== null ) {\r\n            //console.log('localStorage.getItem(\"index\") === ' + i);\r\n            //this.setState({ index: i });\r\n        }\r\n\r\n\r\n        fetch(data)\r\n        .then( res => res.json() )\r\n        .then(\r\n            (result) => {\r\n                console.log(result);\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    entries: result.feed.entry\r\n                })\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    receiveVideoState(dat) {\r\n        console.log('receive video state');\r\n        \r\n        // event.data\r\n        // 1 - playing\r\n        // 2 - paused\r\n        // 3 - scanning ahead\r\n        // 0 - end of video reached\r\n        switch(dat) {\r\n            case 0:\r\n                this.setState({ vplay: false })\r\n                break;\r\n            case 1:\r\n                this.setState({ vplay: true })\r\n                break;\r\n            case 2:\r\n                break;\r\n            case 3:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    receiveAnswer(correct) {\r\n        console.log('receive answer');\r\n\r\n        if(correct) {\r\n            console.log('correct answer');\r\n            \r\n            this.setState({\r\n                qlock: true,\r\n                qlockTimer: 5\r\n            })\r\n\r\n        } else {\r\n            console.log('wrong answer');\r\n            \r\n            this.setState({\r\n                qlock: true,\r\n                qlockTimer: 30\r\n            })\r\n        }\r\n    }\r\n\r\n    advanceQuestion() {\r\n        console.log('advance question');\r\n\r\n        let stage = this.state.stage;\r\n        let index = this.state.index + 1;\r\n        const entries = this.state.entries;\r\n        const type = entries[index].gsx$type.$t;\r\n        \r\n        if (type === 'E') \r\n            stage = 'end'\r\n        else if (type === 'V' && stage === 'intro') \r\n            stage = 'quiz';\r\n\r\n        this.setState({\r\n            stage,\r\n            index,\r\n            qlock: false,\r\n            vplay: true\r\n        })\r\n\r\n        //localStorage.setItem('index', index);\r\n    }\r\n\r\n    render() {\r\n        console.log('render game');\r\n\r\n        const { stage, error, isLoaded } = this.state;\r\n\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>\r\n\r\n        } else if(!isLoaded) {\r\n            return <div>Loading...</div>\r\n\r\n        } else if(stage === 'quiz') {\r\n            const { entries, index, vplay, qlock, qlockTimer } = this.state;\r\n\r\n            return (\r\n                <div id=\"game\">\r\n                    <div className='embed-container'>\r\n                        <div className=\"embed-overlay\"></div>\r\n                        <Question \r\n                            question={entries[index].gsx$question.$t}\r\n                            vidurl={entries[index].gsx$youtube.$t}\r\n                            type={entries[index].gsx$type.$t}\r\n                            callback={this.receiveVideoState}\r\n                            index={index}\r\n                        />\r\n                        {qlock && <Spinner duration={qlockTimer} callback={this.advanceQuestion} />}\r\n                    </div>\r\n                    {!vplay && <Answer \r\n                        answer={entries[index].gsx$answer.$t}\r\n                        a={entries[index].gsx$a.$t}\r\n                        b={entries[index].gsx$b.$t}\r\n                        c={entries[index].gsx$c.$t}\r\n                        d={entries[index].gsx$d.$t}\r\n                        callback={this.receiveAnswer}\r\n                        lock={qlock}\r\n                        lockTimer={qlockTimer}\r\n                    />}\r\n                    <TrashCan />\r\n                </div>\r\n            )\r\n\r\n        } else if(stage === 'end') {\r\n            const {entries, index} = this.state;\r\n            const question = entries[index].gsx$question.$t;\r\n            localStorage.clear('index');\r\n            return (\r\n                <div id=\"end\">\r\n                    <div id=\"end-message\">\r\n                        <h1>{question}</h1>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        } else {\r\n            return (\r\n                <div id=\"intro\">\r\n                    <div className=\"vimg\"></div>\r\n                    <img src={Ignite} alt=\"Ignite Freshman Retreat\" onClick={this.advanceQuestion} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './Game';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}