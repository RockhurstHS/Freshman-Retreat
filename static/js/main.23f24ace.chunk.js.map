{"version":3,"sources":["ignite.jpg","Question.js","Answer.js","Spinner.js","TrashCan.js","Game.js","serviceWorker.js","index.js"],"names":["module","exports","Question","props","console","log","state","overlay","onReady","bind","onStateChange","event","target","playVideo","data","this","callback","setState","index","videoMarkup","questionMarkup","opts","question","vidurl","playerVars","autoplay","controls","disablekb","fs","modestbranding","rel","playsinline","showinfo","iv_load_policy","YouTube","videoId","substring","className","id","React","Component","Answer","handleClick","e","lock","status","answer","a","b","c","d","onClick","Spinner","x","y","w","h","m","offset","paused","mark","wait","degree","count","setup","p5","canvasParent","canvasW","document","getElementsByClassName","offsetWidth","canvasH","offsetHeight","createCanvas","parent","noStroke","textAlign","CENTER","textSize","width","height","draw","clear","duration","fill","ellipse","arc","radians","text","millis","advance","mouseClicked","dist","mouseX","mouseY","TrashCan","localStorage","Game","stage","error","isLoaded","entries","vplay","qlock","qlockTimer","receiveAnswer","receiveVideoState","advanceQuestion","i","parseInt","getItem","NaN","fetch","then","res","json","result","feed","entry","dat","correct","type","gsx$type","$t","message","gsx$question","gsx$youtube","gsx$answer","gsx$a","gsx$b","gsx$c","gsx$d","lockTimer","src","Ignite","alt","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23f24ace.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ignite.56afa82d.jpg\";","import React from 'react';\nimport YouTube from 'react-youtube';\nimport './Question.css';\n\nclass Question extends React.Component {\n    constructor(props) {\n        console.log('construct question');\n        super(props);\n        this.state = {\n            overlay: 'noclick', // 'noclick', 'question'\n        }\n        this.onReady = this.onReady.bind(this);\n        this.onStateChange = this.onStateChange.bind(this);\n    }\n\n    onReady(event) {\n        console.log('video ready');\n        event.target.playVideo();\n    }\n\n    onStateChange(event) {\n        console.log('video state change: ' + event.data);\n        this.props.callback(event.data)\n\n        // event.data\n        // 1 - playing\n        // 2 - paused\n        // 3 - scanning ahead\n        // 0 - end of video reached\n\n        let overlay = event.data === 0 ? 'question' : 'noclick';\n        this.setState({ overlay })\n    }\n\n    render() {\n        console.log('render question');\n        console.log('state overlay = ' + this.state.overlay);\n        console.log('qindex = ' + this.props.index);\n\n        let { question, vidurl, index } = this.props;\n        let videoMarkup, questionMarkup, opts;\n\n        opts = {\n            playerVars: {           // https://developers.google.com/youtube/player_parameters\n                autoplay: 1,        // auto play, yes\n                controls: 0,        // disable ui controls\n                disablekb: 1,       // disable keyboard controls\n                fs: 0,              // no full screen\n                modestbranding: 1,  // small logo\n                rel: 0,             // no related videos\n                playsinline: 1,     // no ios auto fullscreen\n                showinfo: 0,        // hide video info (deprecated)\n                iv_load_policy: 3   // remove annotations\n            }\n        }\n\n        videoMarkup = \n        <YouTube \n            videoId={vidurl.substring(17)}\n            opts={opts}\n            onReady={this.onReady}\n            onStateChange={this.onStateChange}\n        />\n\n        if(index > 0 && this.state.overlay === 'noclick') {\n            questionMarkup = <div className=\"embed-overlay\"></div>\n\n        } else if(this.state.overlay === 'question') {\n            questionMarkup =\n            <div className=\"embed-overlay\">\n                <div className=\"question\">\n                    {question}\n                </div>\n            </div>\n        }\n        \n        return (\n            <div id=\"question-panel\">\n                {videoMarkup}\n                {questionMarkup}\n            </div>\n        )\n    }\n}\n\nexport default Question;\n\n\n","import React from 'react';\nimport './Answer.css';\n\nclass Answer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        console.log('answer clicked, locked = ' + this.props.lock);\n\n        if(!this.props.lock) {\n            const status = e.target.id === this.props.answer;\n            this.props.callback(status);    \n        }\n    }\n\n    render() {\n        const {answer, a, b, c, d, lock} = this.props;\n        let answerMarkup;\n\n        if(lock) {\n            answerMarkup=\n            <div id=\"multiple-choice-container\">\n                <div className=\"mc-row\">\n                    <div className={\"noselect answer \" + (answer === 'A' ? 'correct' : 'wrong')} id=\"A\" onClick={(e) => this.handleClick(e)}>(A) {a}</div>\n                    <div className={\"noselect answer \" + (answer === 'B' ? 'correct' : 'wrong')} id=\"B\" onClick={(e) => this.handleClick(e)}>(B) {b}</div>\n                </div>\n                <div className=\"mc-row\">\n                    <div className={\"noselect answer \" + (answer === 'C' ? 'correct' : 'wrong')} id=\"C\" onClick={(e) => this.handleClick(e)}>(C) {c}</div>\n                    <div className={\"noselect answer \" + (answer === 'D' ? 'correct' : 'wrong')} id=\"D\" onClick={(e) => this.handleClick(e)}>(D) {d}</div>\n                </div>\n            </div>\n            \n        } else {\n            answerMarkup =\n            <div id=\"multiple-choice-container\">\n                <div className=\"mc-row\">\n                    <div className=\"noselect answer\" id=\"A\" onClick={(e) => this.handleClick(e)}>(A) {a}</div>\n                    <div className=\"noselect answer\" id=\"B\" onClick={(e) => this.handleClick(e)}>(B) {b}</div>\n                </div>\n                <div className=\"mc-row\">\n                    <div className=\"noselect answer\" id=\"C\" onClick={(e) => this.handleClick(e)}>(C) {c}</div>\n                    <div className=\"noselect answer\" id=\"D\" onClick={(e) => this.handleClick(e)}>(D) {d}</div>\n                </div>\n            </div>\n        }\n        return (\n            answerMarkup\n        )\n    }\n}\n\nexport default Answer;","import React from 'react';\nimport Sketch from 'react-p5';\n\nclass Spinner extends React.Component {\n    x = 0;\n    y = 0;\n    w = 50;\n    h = 50;\n    m = 0;\n    offset = 20;\n    paused = false;\n    mark = 0;\n    wait = 1000;\n    degree = 45;\n    count = 0;\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.advance = this.advance.bind(this);\n        this.degree = 360 / props.duration;\n        this.count = props.duration;\n    }\n\n    handleClick(e) {\n        this.paused = !this.paused;\n    }\n\n    advance() {\n        this.props.callback();\n    }\n\n    setup = (p5, canvasParent) => {\n        const canvasW = document.getElementsByClassName('embed-container')[0].offsetWidth;\n        const canvasH = document.getElementsByClassName('embed-container')[0].offsetHeight;\n        p5.createCanvas(canvasW, canvasH).parent(canvasParent);\n        p5.noStroke();\n        p5.textAlign(p5.CENTER, p5.CENTER);\n        p5.textSize(p5.width / 25);\n        this.x = p5.width/2;\n        this.y = p5.height/2;\n        this.w = p5.width / 4;\n        this.h = p5.width / 4;\n    }\n\n    draw = p5 => {\n        p5.clear();\n        if(this.props.duration === 30)\n            p5.fill(255, 0, 0, 100);\n        else\n            p5.fill(0, 255, 0, 100);\n        p5.ellipse(this.x, this.y, this.w, this.h);\n        p5.fill(0, 0, 255, 100);\n        p5.arc(this.x, this.y, this.w, this.h, p5.radians(0), p5.radians(this.m));\n        p5.fill(255, 100);\n        p5.ellipse(this.x, this.y, this.w-this.offset, this.h-this.offset);\n        p5.fill(0);\n        p5.text(this.count, this.x, this.y);\n\n        if(p5.millis() - this.mark > this.wait) {\n            this.mark = p5.millis();\n            this.m += this.degree;\n            this.count--;\n        }\n\n        if(this.m >= 360) {\n            this.advance();\n        }\n    }\n\n    mouseClicked = p5 => {\n        const click = p5.dist(this.x, this.y, p5.mouseX, p5.mouseY);\n        if(click < p5.dist(this.x, this.y, this.w-this.offset, this.h-this.offset)) {\n            // this.advance();\n        }\n    }\n\n    render() {\n        return <Sketch setup={this.setup} draw={this.draw} mouseClicked={this.mouseClicked} />;\n    }\n}\n\nexport default Spinner;","import React from 'react';\nimport './TrashCan.css';\n\nclass TrashCan extends React.Component {\n    constructor(props) {\n        super(props);\n        this.clear = this.clear.bind(this);\n    }\n\n    clear() {\n        console.log('clear local index');\n        localStorage.clear('index');\n    }\n\n    render() {\n        return (\n            <div id=\"trash-can\" onClick={this.clear}>Clear Storage</div>\n        )\n    }\n}\n\nexport default TrashCan;","// autoplay on ios not possible at this time\n// https://stackoverflow.com/a/48442630\n\n// sheet\n// https://docs.google.com/spreadsheets/d/1gFBVScKExlatL52RSngKDOLfDGNEo4GebnuHMlVhmNE/edit#gid=0\n\n// json\n// https://spreadsheets.google.com/feeds/list/1gFBVScKExlatL52RSngKDOLfDGNEo4GebnuHMlVhmNE/od6/public/values?alt=json\n\n\nimport React from 'react';\n\nimport Question from './Question';\nimport Answer from './Answer';\nimport Spinner from './Spinner';\nimport TrashCan from './TrashCan';\n\nimport './Game.css';\n\nimport Ignite from './ignite.jpg';\n\nclass Game extends React.Component {\n    constructor(props) {\n        console.log('construct game');\n        \n        super(props);\n\n        this.state = {\n            stage: 'intro',     // [intro, quiz, end] /* todo: implement react router */\n            error: null,        // netcode\n            isLoaded: false,    // netcode\n            entries: [],        // stores json\n            index: -1,   // current question (last=14)\n            vplay: true,        // video is playing\n            qlock: false,       // disable multiple choice answer clicks\n            qlockTimer: 0,      // duration of answer click disable\n        };\n\n        this.receiveAnswer = this.receiveAnswer.bind(this);\n        this.receiveVideoState = this.receiveVideoState.bind(this);\n        this.advanceQuestion = this.advanceQuestion.bind(this);\n    }\n\n    componentDidMount() {\n        console.log('game component did mount');\n        \n        // 2019-20 const data = 'https://spreadsheets.google.com/feeds/list/1gFBVScKExlatL52RSngKDOLfDGNEo4GebnuHMlVhmNE/od6/public/values?alt=json';\n        const data = 'https://spreadsheets.google.com/feeds/list/1E0PWGXusSh5FF-mqHTcoR9wHuveyTYTLEKrnFIxCfFA/od6/public/values?alt=json';\n\n        // todo: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN\n        let i = parseInt(localStorage.getItem('index')) - 1;\n        if(i === NaN) console.log('nan');\n        if(i === null) console.log('null');\n        if(i !== NaN && i !== null ) {\n            //console.log('localStorage.getItem(\"index\") === ' + i);\n            //this.setState({ index: i });\n        }\n\n\n        fetch(data)\n        .then( res => res.json() )\n        .then(\n            (result) => {\n                console.log(result);\n                this.setState({\n                    isLoaded: true,\n                    entries: result.feed.entry\n                })\n            },\n            (error) => {\n                console.log(error);\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            }\n        )\n    }\n\n    receiveVideoState(dat) {\n        console.log('receive video state');\n        \n        // event.data\n        // 1 - playing\n        // 2 - paused\n        // 3 - scanning ahead\n        // 0 - end of video reached\n        switch(dat) {\n            case 0:\n                this.setState({ vplay: false })\n                break;\n            case 1:\n                this.setState({ vplay: true })\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            default:\n                break;\n        }\n    }\n\n    receiveAnswer(correct) {\n        console.log('receive answer');\n\n        if(correct) {\n            console.log('correct answer');\n            \n            this.setState({\n                qlock: true,\n                qlockTimer: 5\n            })\n\n        } else {\n            console.log('wrong answer');\n            \n            this.setState({\n                qlock: true,\n                qlockTimer: 30\n            })\n        }\n    }\n\n    advanceQuestion() {\n        console.log('advance question');\n\n        let stage = this.state.stage;\n        let index = this.state.index + 1;\n        const entries = this.state.entries;\n        const type = entries[index].gsx$type.$t;\n        \n        if (type === 'E') \n            stage = 'end'\n        else if (type === 'V' && stage === 'intro') \n            stage = 'quiz';\n\n        this.setState({\n            stage,\n            index,\n            qlock: false,\n            vplay: true\n        })\n\n        //localStorage.setItem('index', index);\n    }\n\n    render() {\n        console.log('render game');\n\n        const { stage, error, isLoaded } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>\n\n        } else if(!isLoaded) {\n            return <div>Loading...</div>\n\n        } else if(stage === 'quiz') {\n            const { entries, index, vplay, qlock, qlockTimer } = this.state;\n\n            return (\n                <div id=\"game\">\n                    <div className='embed-container'>\n                        <div className=\"embed-overlay\"></div>\n                        <Question \n                            question={entries[index].gsx$question.$t}\n                            vidurl={entries[index].gsx$youtube.$t}\n                            type={entries[index].gsx$type.$t}\n                            callback={this.receiveVideoState}\n                            index={index}\n                        />\n                        {qlock && <Spinner duration={qlockTimer} callback={this.advanceQuestion} />}\n                    </div>\n                    {!vplay && <Answer \n                        answer={entries[index].gsx$answer.$t}\n                        a={entries[index].gsx$a.$t}\n                        b={entries[index].gsx$b.$t}\n                        c={entries[index].gsx$c.$t}\n                        d={entries[index].gsx$d.$t}\n                        callback={this.receiveAnswer}\n                        lock={qlock}\n                        lockTimer={qlockTimer}\n                    />}\n                    <TrashCan />\n                </div>\n            )\n\n        } else if(stage === 'end') {\n            const {entries, index} = this.state;\n            const question = entries[index].gsx$question.$t;\n            localStorage.clear('index');\n            return (\n                <div id=\"end\">\n                    <div id=\"end-message\">\n                        <h1>{question}</h1>\n                    </div>\n                </div>\n            )\n\n        } else {\n            return (\n                <div id=\"intro\">\n                    <div className=\"vimg\"></div>\n                    <img src={Ignite} alt=\"Ignite Freshman Retreat\" onClick={this.advanceQuestion} />\n                </div>\n            )\n        }\n    }\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Game />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}